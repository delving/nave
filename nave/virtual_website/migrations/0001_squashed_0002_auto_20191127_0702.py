# Generated by Django 2.2.7 on 2019-11-30 09:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    replaces = [('virtual_website', '0001_initial'), ('virtual_website', '0002_auto_20191127_0702')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VirtualWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=512, verbose_name='title')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='title')),
                ('body', models.TextField(blank=True, null=True, verbose_name='body')),
                ('query', models.TextField(blank=True, help_text='The full query as used on the search page or search API.', null=True, verbose_name='query')),
                ('oai_pmh', models.BooleanField(default=True, help_text='Is this collection publicly available.', verbose_name='published')),
                ('published', models.BooleanField(default=True, help_text='Is this collection publicly available.', verbose_name='published')),
                ('owner', models.CharField(blank=True, help_text='profile ID, user key, etc', max_length=512, null=True, verbose_name='owner key')),
                ('creator', models.CharField(blank=True, help_text='name or institution', max_length=512, null=True, verbose_name='creator')),
                ('diw_header', models.TextField(blank=True, null=True, verbose_name='diw header')),
                ('diw_footer', models.TextField(blank=True, null=True, verbose_name='diw footer')),
                ('diw_css', models.TextField(blank=True, null=True, verbose_name='diw css')),
                ('diw_config', models.TextField(blank=True, null=True, verbose_name='diw configuration')),
                ('external_url', models.CharField(blank=True, help_text='extern URL voor de virtuele website.', max_length=512, null=True, verbose_name='external URL')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups that have access to this metadata record', to='auth.Group', verbose_name='Group')),
                ('user', models.ForeignKey(blank=True, help_text='The first creator of the object', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='virtualwebsites', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Virtual Website',
                'verbose_name_plural': 'Virtual Websites',
            },
        ),
        migrations.CreateModel(
            name='VirtualWebsitePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=512, verbose_name='title')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['virtual_website__title', 'title'])),
                ('show_search', models.BooleanField(default=True, help_text='show search bar on virtual collection page', verbose_name='show search')),
                ('diw', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='virtual_website.VirtualWebsite')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups that have access to this metadata record', to='auth.Group', verbose_name='Group')),
                ('user', models.ForeignKey(blank=True, help_text='The first creator of the object', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='virtualwebsitepages', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('page_body', models.TextField(blank=True, null=True, verbose_name='page body')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'ordering': ['slug'],
            },
        ),
    ]

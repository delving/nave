[group:%(proj_name)s]
programs=uwsgi,celery_main,celery_records,celerybeat,flower,narthex

[program:narthex]
command=%(narthex_versions_dir)s/narthex-%(narthex_version)s/bin/narthex -J-Dsun.io.unicode.encoding=UnicodeLittle -J-Dfile.encoding=UTF8 -J-Xms256M -J-Xmx2512M -J-XX:MaxPermSize=128M -J-XX:+UseCodeCacheFlushing -J-XX:+CMSPermGenSweepingEnabled -J-XX:+UseConcMarkSweepGC -J-server -Dapplication.log=/var/log/narthex/%(org_id)s_application.log -Dlogger.file=%(narthex_files)s/logger.xml -Dhttp.port=%(narthex_port)s -Dpidfile.path=%(narthex_files)s/narthex.pid -Dconfig.file=%(narthex_files)s/narthex.conf

directory=%(narthex_versions_dir)s/narthex-%(narthex_version)s/
user=vagrant
process_name=narthex
numprocs=1
autostart=true
autorestart=true
redirect_stderr=true
startsecs=10
stopwaitsecs=10
environment=LANG="%(locale)s",LC_ALL="%(locale)s",LC_LANG="%(locale)s"

[program:flower]
; Set full path to flower program if using virtualenv
command=/home/vagrant/.virtualenvs/%(proj_name)s/bin/flower -A projects.%(proj_name)s --port=5555

directory=%(project_path)s
user=vagrant
numprocs=1
stdout_logfile=/var/log/celery/%(proj_name)s_flower.log
stderr_logfile=/var/log/celery/%(proj_name)s_flower.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998


[program:celery_records]
; Set full path to celery program if using virtualenv
command=/home/vagrant/.virtualenvs/%(proj_name)s/bin/celery worker -A projects.%(proj_name)s --loglevel=INFO -n %(proj_name)s_record_worker -Q %(proj_name)s_records

directory=%(project_path)s
user=vagrant
numprocs=1
stdout_logfile=/var/log/celery/%(proj_name)s_records_worker.log
stderr_logfile=/var/log/celery/%(proj_name)s_records_worker.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998

[program:uwsgi]
command=/home/vagrant/.virtualenvs/%(proj_name)s/bin/uwsgi --ini uwsgi.ini
directory=%(project_path)s
user=vagrant
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=%(project_path)s/hub3_uwsgi.log
stopsignal=QUIT
environment=LANG="%(locale)s",LC_ALL="%(locale)s",LC_LANG="%(locale)s"

[program:celery_main]
; Set full path to celery program if using virtualenv
command=/home/vagrant/.virtualenvs/%(proj_name)s/bin/celery worker -A projects.%(proj_name)s --loglevel=INFO -n %(proj_name)s_worker -Q %(proj_name)s,%(proj_name)s__webresource,%(proj_name)s_download,%(proj_name)s_mapping

directory=%(project_path)s
user=vagrant
numprocs=1
stdout_logfile=/var/log/celery/%(proj_name)s_worker.log
stderr_logfile=/var/log/celery/%(proj_name)s_worker.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 60

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998

[program:celerybeat]
; Set full path to celery program if using virtualenv
command=/home/vagrant/.virtualenvs/%(proj_name)s/bin/celery beat -A projects.%(proj_name)s --schedule /home/%(proj_name)s/%(proj_name)s_beat.db --loglevel=INFO

; remove the -A myapp argument if you are not using an app instance
directory=%(project_path)s
user=vagrant
numprocs=1
stdout_logfile=/var/log/celery/%(proj_name)s_beat.log
stderr_logfile=/var/log/celery/%(proj_name)s_beat.log
autostart=true
autorestart=true
startsecs=10
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=999
